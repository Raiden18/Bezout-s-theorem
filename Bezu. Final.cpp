#include<stdio.h>
#include<iostream>
#include <iomanip> 
#include <math.h> 

using namespace std;

int main(void)
{
	setlocale(LC_CTYPE, "rus");
	char n;
	do
	{
	system("cls");
	cout <<"-------------------------------------------------------------------------------\n";
	cout <<"Программа реализует теорему Безу. \n";
	cout <<"-------------------------------------------------------------------------------\n";
	cout <<"Введите:\n"<<"(1) - перейти к программе\n"<<"(2) - прочитать информацию о полиномах\n"<<"(3) - перейти к спарвке\n";
	cout <<"-------------------------------------------------------------------------------\n";
	char y;
	int chek;
	cin>>chek;
	if (chek==1) 
	{
	do
	{
	system("cls");
	cout <<"-------------------------------------------------------------------------------\n"; 
//Порядок полинома.
	cout <<"Порядок полинома: ";
	int n1;
	cin >>n1;
	cout <<"-------------------------------------------------------------------------------\n";
	if (n1>0)
	{
//Ввывод общего уравнения полинома.
	cout <<"f(x)=";
	for (int i = n1; i>=1; i--)
	 {
		cout<<"A("<<i<<")*x^"<<i<<"+";	
	 } 
	cout <<"A(0)\n";
	cout <<"-------------------------------------------------------------------------------\n";
//Ввод коэфицентов.
	 int koef[n1];
	for (int i=n1; i>=1; i--)
	{
		cout<<"A("<<i<<")= ";
		cin>>koef[i];
	}
	do 
	{
		cout<<"A(0)= ";
		cin>>koef[0];	
	}
	while(koef[0]==0);
	cout <<"-------------------------------------------------------------------------------\n";
//Вывод уравнения:
	cout<<"f(x)=";
	cout << koef[n1]<<"*x^"<<n1;
	for (int i=n1-1; i>=0; i--)
	{
		//cout <<koef[i]<<"x^"<<i<<;
		if (koef[i]<0)
		{
			cout<<koef[i]<<"*x^"<<i;
		}
		else 
		{
			cout<<"+"<<koef[i]<<"*x^"<<i;
		}
	 } 
	 if (koef[0]>0)
	 {
	 	 cout<<"+"<<koef[0]<<"=0"<<endl;
	 }
	 else
	 {
	 	cout<<koef[0]<<"=0"<<endl;
	 }
	cout <<"-------------------------------------------------------------------------------\n";
//Далее решаем уравнение 1й степени.
	if (n1==1) 
	{
		cout<<"x="<<(-koef[0])/koef[n1]<<"\n";
	}
//Решаем уравнение n-й степени
	else
	{
//Измеряем размер массива для делителей свободного члена.		
		int temp;
		int schet1=0;
		for (int i=1; i<=abs(koef[0]); i++)
		{
			temp=abs(koef[0]) % i;
			if (temp==0)
			{
			schet1++;	
			}
		}	
//Записываем в массив делители свободного члена.		
		int DelC[schet1];
		temp=0;
		int j = schet1;
		//int k=;
		cout<<"Делители A(0): ";
		for (int i=1; i<=abs(koef[0]); i++)
		{
			temp=koef[0]%i;
			if (temp == 0)
			{
				j--;
				DelC[j]=i;
				cout<<"+-"<<DelC[j]<<" ";
			}
		}
		cout<<endl;
//Измеряем размер массива делителей старшего коэфицента.
		temp=0;
		int schet2=0;
		for (int i=1; i<=abs(koef[n1]); i++)
		{
		temp=abs(koef[n1])%i;
		if (temp==0)
			{
				schet2++;		
			}	
		}
//Записываем в делители старшенго коэфицента в массив.
		int DelN[schet2];
		j=schet2;
		temp=0;
		cout<<"Делители A("<<n1<<"): ";
		for (int i=1; i<=abs(koef[n1]); i++)
		{
			temp=abs(koef[n1])%i;
			if (temp == 0)
			{
				j--;
				DelN[j]=i;
				cout<<"+-"<<DelN[j]<<" ";
			}
		}
		cout<<endl;
//Кандидаты в корни.	
		cout<<"Кандидаты в корни: ";
		double kandidat[schet1*schet2];
		j=0;
		for (int i=schet2-1; i>=0; i--)
		{
			for (int k=schet1-1; k>=0; k--)
			{
				kandidat[j]=(double) DelC[k]/(double) DelN[i];
				cout<<fixed<<setprecision(2)<<"+-"<<kandidat[j]<<" ";
				j++;	
			}
		}	
		cout<<endl;	
		cout <<"-------------------------------------------------------------------------------\n";
//Корни уравнения.
		cout<<"Корни уравнения: ";
		double koren1[n1];
		double f1;
		double f2;
		int hui;
		hui=0;
		f1=0;
		f2=0;
		for(int i=j-1; i>=0; i--)
		{
			for(int k=n1; k>=0; k--)
			{
				f1=f1+koef[k]*pow(kandidat[i],k);
				f2=f2+koef[k]*pow(-kandidat[i],k);	
			}
			if (f1==0)
			{
				cout<<kandidat[i]<<" ";
				hui++;
			}
			if (f2==0)
			{
				cout<<"-"<<kandidat[i]<<" ";
				hui++;
			}
			f1=0;
			f2=0;
		}	
		if (hui==0)
		{
			cout<<"Действительных корней нет.";
		}
		cout<<endl;	
		cout <<"-------------------------------------------------------------------------------\n";	
		}	
	}
	else
	{
	cout<<"Степень многочлена строго больше нуля.\n";
	cout <<"-------------------------------------------------------------------------------\n";	
	}
	cout<<"Повторить для другого полинома?\n"<<"(n|N) - выйти в меню, другое - повторить.\n";
	cin>>y;
	}
	while (y!='n' && y!='N');
	}
	else
	if (chek==2)
	{
		system("cls");
		cout <<"-------------------------------------------------------------------------------\n";
		cout<<"Многочлен(полином) от n переменных - сумма одночленов, т.е сумма вида: \n"<<"f(x)=A(n)*x^(n)+A(n-1)*x^(n-1)+...+A(1)*x+A(0)\n";
		cout <<"-------------------------------------------------------------------------------\n";
		cout<<"Где: \n"<<"n - порядок многочлена\n"<<"A(n) - старший коэфицент многочлена\n"<<"A(0) - свободный член многочлена \n";
		cout <<"-------------------------------------------------------------------------------\n";
		cout<<"Введите любой символ, чтобы выйти в меню.\n";
		cin>>n;
	}
	else 
	if (chek==3)
	{
		system("cls");	
		cout <<"-------------------------------------------------------------------------------\n";
		cout <<"Программа написана Карпухиным Павлом в рамках ознакомления с языком программирования С++. \n";
		cout <<"-------------------------------------------------------------------------------\n";
		cout <<"При использовании программы рекомендуется следовать инструкциям, т.е вводить то что требуют - число или символ, иначе программа сломается.\n";
		cout <<"-------------------------------------------------------------------------------\n";	
		cout<<"Введите любой символ, чтобы выйти в меню.\n";
		cin>>n;
	}
	else 
	{
		cout <<"-------------------------------------------------------------------------------\n";
		cout<<"Такого номера действия не существует.\n";
		cout <<"-------------------------------------------------------------------------------\n";
		cout<<"Введите любой символ, чтобы повторить.\n";
		cin>>n;
	}
	}
	while (n!='N' && n!='N');
}
